#!/bin/bash
############################################################################
# Script to identify if a WAF is present in front of a web app
############################################################################
if [ "$#" -lt 1 ]; then
    script_name=$(basename "$0")
    echo "Usage:"
    echo "   $script_name [URL]"
    echo ""
    echo "Call example:"
    echo "    $script_name \"https://righettod.eu\""
    exit 1
fi
test_waf () {
    tgt=$1
    curl -A "Mozilla 5/0" -sk -o /dev/null -w '%{http_code}' $tgt
    echo ""
    curl -A "Mozilla 5/0" -sk $tgt | sha256sum | grep --color=never -Po "[a-z0-9]+"
}
url=$1
# https://github.com/EnableSecurity/wafw00f
echo -e "\e[93m[+] Test using WAFW00F...\e[0m"
wafw00f $url | grep --color=never " WAF"
# https://github.com/stamparm/identYwaf
echo -e "\e[93m[+] Test using IDENTYWAF...\e[0m"
python3 /tools/identYwaf/identYwaf.py $url | grep --color=never "blind match"
# https://github.com/projectdiscovery/nuclei-templates/blob/master/technologies/waf-detect.yaml
echo -e "\e[93m[+] Test using NUCLEI 'waf-detect' template...\e[0m"
nuclei -silent -t $NUCLEI_TPL_HOME/technologies/waf-detect.yaml -tags misc -u $url
echo -e "\e[93m[+] Test using NMAP WAF scripts...\e[0m"
host=$(awk -F/ '{print $3}' <<<"$url")
nmap -Pn -p 80,443 --open --script "http-waf-detect,http-waf-fingerprint" $host
echo -e "\e[93m[+] Test using CURL with explicit payloads in a HTTP GET request...\e[0m"
# %27%20or%201%3D1%20%2D%2D%20 ===> ' or 1=1 --
echo "[*] SQL injection payload: "
test_waf $url"?payload=%27%20or%201%3D1%20%2D%2D%20"
# %3Cscript%20src%3D%27%2F%2Frighettod%2Eeu%2Fs%2Ejs%27%3E%3C%2Fscript%3E ===> <script src='//righettod.eu/s.js'></script>
echo "[*] XSS injection payload: "
test_waf $url"?payload=%3Cscript%20src%3D%27%2F%2Frighettod%2Eeu%2Fs%2Ejs%27%3E%3C%2Fscript%3E"
# Normal request
echo "[*] NO  injection payload: "
test_waf $url"?payload=42"
