#!/bin/bash

############################################################################
# Script to generate character escape sequences
# Generate almost all the possible combinations of the character submitted in HTML and JavaScript. 
# Based on https://cheatsheetseries.owasp.org/cheatsheets/XSS_Filter_Evasion_Cheat_Sheet.html#character-escape-sequences
# Useful to bypass Web Application Firewall
############################################################################

if [ "$#" -lt 1 ];
then
    script_name=$(basename "$0")
    echo "Dependencies:"
    echo "   ascii --> apt install ascii"
    echo ""
    echo "Usage:"
    echo "   ./$script_name <char>"
    echo ""
    echo "Examples:"
    echo "   ./$script_name '<'"
    echo "   ./$script_name ';'"
    echo "   ./$script_name \"'\""
    exit 1
fi

char=$1
echo "Character is: $1"

char_name=$(ascii "$char" | grep 'Official name:' | cut -d ' ' -f 3)
echo "Character name is: $char_name"

decimal=$(ascii "$char" | grep decimal | cut -d ' ' -f 5 | tr -d ',')

hex=$(ascii "$char" | grep hex | cut -d ' ' -f 7 | tr -d ',')
hex_upper=$(ascii "$char" | grep hex | cut -d ' ' -f 7 | tr -d ',' | tr [:lower:] [:upper:])
echo "Hexadecimal value of the character is: $hex_upper"

if [[ $decimal == 0* ]]
then
	decimal=$(echo $decimal | cut -c 2-3)
	echo "Decimal value of the character is: $decimal"
else
	echo "Decimal value of the character is: $decimal"
fi

echo "Crafting wordlist..."

echo "$char" >> $char_name.txt
echo "%$hex" >> $char_name.txt
echo "&#$decimal;" >> $char_name.txt
echo "&#0$decimal;" >> $char_name.txt
echo "&#00$decimal;" >> $char_name.txt
echo "&#000$decimal;" >> $char_name.txt
echo "&#0000$decimal;" >> $char_name.txt
echo "&#00000$decimal;" >> $char_name.txt
echo "&#$decimal;" >> $char_name.txt
echo "&#0$decimal;" >> $char_name.txt
echo "&#00$decimal;" >> $char_name.txt
echo "&#000$decimal;" >> $char_name.txt
echo "&#0000$decimal;" >> $char_name.txt
echo "&#00000$decimal;" >> $char_name.txt
echo "&#x$hex;" >> $char_name.txt
echo "&#x0$hex;" >> $char_name.txt
echo "&#x00$hex;" >> $char_name.txt
echo "&#x000$hex;" >> $char_name.txt
echo "&#x0000$hex;" >> $char_name.txt
echo "&#x00000$hex;" >> $char_name.txt
echo "&#x$hex;" >> $char_name.txt
echo "&#x0$hex;" >> $char_name.txt
echo "&#x00$hex;" >> $char_name.txt
echo "&#x000$hex;" >> $char_name.txt
echo "&#x0000$hex;" >> $char_name.txt
echo "&#x00000$hex;" >> $char_name.txt
echo "&#X$hex;" >> $char_name.txt
echo "&#X0$hex;" >> $char_name.txt
echo "&#X00$hex;" >> $char_name.txt
echo "&#X000$hex;" >> $char_name.txt
echo "&#X0000$hex;" >> $char_name.txt
echo "&#X00000$hex;" >> $char_name.txt
echo "&#X$hex;" >> $char_name.txt
echo "&#X0$hex;" >> $char_name.txt
echo "&#X00$hex;" >> $char_name.txt
echo "&#X000$hex;" >> $char_name.txt
echo "&#X0000$hex;" >> $char_name.txt
echo "&#X00000$hex;" >> $char_name.txt
echo "&#x$hex_upper;" >> $char_name.txt
echo "&#x0$hex_upper;" >> $char_name.txt
echo "&#x00$hex_upper;" >> $char_name.txt
echo "&#x000$hex_upper;" >> $char_name.txt
echo "&#x0000$hex_upper;" >> $char_name.txt
echo "&#x00000$hex_upper;" >> $char_name.txt
echo "&#x$hex_upper;" >> $char_name.txt
echo "&#x0$hex_upper;" >> $char_name.txt
echo "&#x00$hex_upper;" >> $char_name.txt
echo "&#x000$hex_upper;" >> $char_name.txt
echo "&#x0000$hex_upper;" >> $char_name.txt
echo "&#x00000$hex_upper;" >> $char_name.txt
echo "&#X$hex_upper;" >> $char_name.txt
echo "&#X0$hex_upper;" >> $char_name.txt
echo "&#X00$hex_upper;" >> $char_name.txt
echo "&#X000$hex_upper;" >> $char_name.txt
echo "&#X0000$hex_upper;" >> $char_name.txt
echo "&#X00000$hex_upper;" >> $char_name.txt
echo "&#X$hex_upper;" >> $char_name.txt
echo "&#X0$hex_upper;" >> $char_name.txt
echo "&#X00$hex_upper;" >> $char_name.txt
echo "&#X000$hex_upper;" >> $char_name.txt
echo "&#X0000$hex_upper;" >> $char_name.txt
echo "&#X00000$hex_upper;" >> $char_name.txt
echo "\x$hex" >> $char_name.txt
echo "\x$hex_upper" >> $char_name.txt
echo "\u00$hex" >> $char_name.txt
echo "\u00$hex_upper" >> $char_name.txt

cat $char_name.txt | sort | uniq > $char_name_sorted.txt
mv $char_name_sorted.txt $char_name.txt

echo "Output file: $char_name.txt"
