#!/bin/bash
############################################################################
# Script to identify a product's CVEs based on information provided by
# https://vulmon.com/
############################################################################
if [ "$#" -lt 1 ]; then
    script_name=$(basename "$0")
    echo "Usage:"
    echo "   $script_name [SEARCH_TERM]"
    echo ""
    echo "Call example:"
    echo "    $script_name 'apache tomcat 7.5.22'"
    exit 1
fi
terms=$(echo "$1" | tr " " +)
work_file="/tmp/work.tmp"
echo -e "\e[93m[+] Extract the first 10 CVE for the search terms '$terms' sorted by highest CVSS score\e[0m"
curl -sk "https://vulmon.com/searchpage?q=$terms&sortby=byriskscore" | grep -Po "/vulnerabilitydetails\?qid=CVE-[0-9]{4}-[0-9]+" | uniq > $work_file
found=$(wc -l $work_file | cut -d' ' -f1)
if [ "$found" == "0" ];
then
  echo "No CVE found."
  exit 0
else
  echo "CVE found."
fi
echo -e "\e[93m[+] Extract CVE CVSS 2/3 score\e[0m"
while IFS= read -r line
do
  score=$(curl -sk "https://vulmon.com$line" | grep -Po "CVSS v(2|3) Base Score: [0-9\.]+")
  cve=$(echo $line | cut -d'=' -f2)
  score_formatted=$(echo "$score" | tr '\n' ',')
  echo -e "\e[36m$cve\e[0m: ${score_formatted::-1}"
done < "$work_file"
rm $work_file
echo -e "\e[93m[+] Estimate the total number of CVE(s)\e[0m"
total_count=0
for page in $(seq 1 100)
do
  cve_count=$(curl -sk "https://vulmon.com/searchpage?q=$terms&sortby=byriskscore&page=$page" | grep -Po "/vulnerabilitydetails\?qid=CVE-[0-9]{4}-[0-9]+" | sort -u | wc -l)
  if [ "$cve_count" == "0" ];
  then
    break
  else
    total_count=$(( $total_count + $cve_count ))
  fi
done
echo "$total_count CVE(s)."