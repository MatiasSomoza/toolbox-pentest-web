#!/bin/bash
##################################################################
# Script to identify JS libs deployed alongside a 
# web application but not referenced
#
# Use package names from this repository:
#   https://github.com/nice-registry/all-the-package-names/blob/master/names.json
#
# Use dictionary QUICKHITS from SecLists to identify content in the lib folders identified:
#   https://github.com/danielmiessler/SecLists/blob/master/Discovery/Web-Content/quickhits.txt
#
# System dependencies:
#   jq wfuzz
##################################################################
# Utilities functions
function write_step(){
    echo -e "\e[93m[+] $1\e[0m"
}
# Constants
PKG_FILE="/tmp/modules.tmp"
DATA_FILE_NO_VERSION_SUFFIX="/tmp/data_without_version.json"
DATA_FILE_WITH_VERSION_SUFFIX="/tmp/data_with_version.json"
DATA_FILE_CONSOLIDATED="/tmp/data_consolidated.tmp"
GLOBAL_RESULTS="/tmp/data_global.json"
# Entry point
if [ "$#" -lt 3 ]; then
    script_name=$(basename "$0")
    echo "Usage:"
    echo "   $script_name [APP_JS_FOLDER_BASE_URL] [PATH_TO_NAMES_JSON_FILE] [PATH_TO_SECLISTS_QUICKHITS_DICT_TXT_FILE] [PACKAGE_COUNT_TAKEN_FROM_NAMES_JSON_FILE]"
    echo ""
    echo "PACKAGE_COUNT_TAKEN_FROM_NAMES_JSON_FILE is optional and default to 1000."
    echo ""
    echo "Call example:"
    echo "    $script_name https://myapp.com/js/vendor /tmp/names.json /tmp/quickhits.txt 1000"
    exit 1
fi
APP_JS_FOLDER_BASE_URL=$1
PATH_TO_NAMES_JSON_FILE=$2
PATH_TO_SECLISTS_QUICKHITS_DICT_TXT_FILE=$3
if [ "$#" -eq 4 ]; then
    PKG_LIMIT=$4
else
    PKG_LIMIT="1000"
fi
# Step 01
write_step "Filter package list to the first $PKG_LIMIT having a package name..."
jq ".[0:$PKG_LIMIT]" $PATH_TO_NAMES_JSON_FILE | grep "," | cut -d'"' -f 2 > $PKG_FILE
# Step 02
write_step "Search for them without version suffix..."
wfuzz -c -f $DATA_FILE_NO_VERSION_SUFFIX,json -z file,$PKG_FILE --hc 404 "$APP_JS_FOLDER_BASE_URL/FUZZ"
# Step 03
write_step "Search for them with a version suffix format '-[0-9].0.0'..."
wfuzz -c -f $DATA_FILE_WITH_VERSION_SUFFIX,json -z file,$PKG_FILE -z range,0-9 --hc 404 "$APP_JS_FOLDER_BASE_URL/FUZZ-FUZ2Z.0.0"
# Step 04
write_step "Consolidate data..."
jq --raw-output ".[].payload" $DATA_FILE_NO_VERSION_SUFFIX > $DATA_FILE_CONSOLIDATED
jq --raw-output ".[].payload" $DATA_FILE_WITH_VERSION_SUFFIX >> $DATA_FILE_CONSOLIDATED
# Step 05
write_step "Search for content into lib folders identified..."
wfuzz -c -f $GLOBAL_RESULTS,json -z file,$DATA_FILE_CONSOLIDATED -z file,$PATH_TO_SECLISTS_QUICKHITS_DICT_TXT_FILE --hc 404 "$APP_JS_FOLDER_BASE_URL/FUZZ/FUZ2Z"
# Step 06
write_step "Valid URL identified:"
jq --raw-output ".[].url" $GLOBAL_RESULTS
# Step 06
write_step "Cleanup..."
rm $PKG_FILE 2>/dev/null
rm $DATA_FILE_NO_VERSION_SUFFIX 2>/dev/null
rm $DATA_FILE_WITH_VERSION_SUFFIX 2>/dev/null
rm $DATA_FILE_CONSOLIDATED 2>/dev/null
rm $GLOBAL_RESULTS 2>/dev/null