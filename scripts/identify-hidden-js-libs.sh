#!/bin/bash
###########################################################################################################
# Script to identify JS libs deployed alongside a web application but not referenced
#
# Use package names from this repository:
#   https://github.com/nice-registry/all-the-package-names/raw/master/names.json
#
# Use dictionary QUICKHITS from SecLists to identify content in the lib folders identified:
#   https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/quickhits.txt
#
# Dependencies:
#   https://github.com/ffuf/ffuf
#	https://stedolan.github.io/jq/
###########################################################################################################
# Utilities functions
function write_step(){
    echo -e "\e[93m[+] $1\e[0m"
}
# Constants
PKG_FILE="/tmp/modules.tmp"
DATA_FILE_JSON="/tmp/data.json"
DATA_FILE_TEXT="/tmp/data.tmp"
GLOBAL_RESULTS="/tmp/data_global.json"
# Context tunning
AUTH_TOKEN="X-Test: 123"
FFUF_EXTRA_OPTIONS="-t 15"
COOKIES="Cookie: ABC=123;"
# Entry point
if [ "$#" -lt 1 ]; then
    script_name=$(basename "$0")
    echo "Usage:"
    echo "   $script_name [APP_JS_FOLDER_BASE_URL_WITHOUT_ENDING_SLASH] [PACKAGE_COUNT_TAKEN_FROM_NAMES_JSON_FILE]"
    echo ""
    echo "[i] PACKAGE_COUNT_TAKEN_FROM_NAMES_JSON_FILE is optional and default to 10000."
    echo ""
    echo "Call example:"
    echo "    $script_name https://myapp.com/js/vendor"
    echo "    $script_name https://myapp.com/js/vendor 50000"
    exit 1
fi
APP_JS_FOLDER_BASE_URL=$1
PATH_TO_NAMES_JSON_FILE="/tools/all-the-package-names/names.json"
PATH_TO_SECLISTS_QUICKHITS_DICT_TXT_FILE="/tools/sec-lists/Discovery/Web-Content/quickhits.txt"
if [ "$#" -eq 2 ]; then
    PKG_LIMIT=$2
else
    PKG_LIMIT="10000"
fi
# Step 01
write_step "Filter package list to the first $PKG_LIMIT having a package name..."
jq ".[0:$PKG_LIMIT]" $PATH_TO_NAMES_JSON_FILE | grep "," | cut -d'"' -f 2 > $PKG_FILE
# Step 02
write_step "Search for them..."
ffuf $FFUF_EXTRA_OPTIONS -H "$AUTH_TOKEN" -H "$COOKIES" -of json -o $DATA_FILE_JSON -w $PKG_FILE -fc 404 -u "$APP_JS_FOLDER_BASE_URL/FUZZ"
jq --raw-output ".results[].input.FUZZ" $DATA_FILE_JSON > $DATA_FILE_TEXT
if [ ! -s $DATA_FILE_TEXT ]; then
    echo "No library found!"
    exit 1
fi
# Step 03
write_step "Search for content into lib folders identified..."
ffuf $FFUF_EXTRA_OPTIONS -H "$AUTH_TOKEN" -H "$COOKIES" -of json -o $GLOBAL_RESULTS -w $DATA_FILE_TEXT:FLDER -w $PATH_TO_SECLISTS_QUICKHITS_DICT_TXT_FILE:FLE -fc 403,404 -u "$APP_JS_FOLDER_BASE_URL/FLDER/FLE"
# Step 04
write_step "Valid URL identified:"
jq --raw-output ".results[].url" $GLOBAL_RESULTS
# Step 05
write_step "Cleanup..."
rm $PKG_FILE 2>/dev/null
rm $DATA_FILE_JSON 2>/dev/null
rm $DATA_FILE_TEXT 2>/dev/null
rm $GLOBAL_RESULTS 2>/dev/null
exit 0
