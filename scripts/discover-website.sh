#!/bin/bash
###
# Cf https://github.com/ffuf/ffuf#usage
# Use -fl X to skip responses with X number of lines
#     -fs X to skip responses with a response size of X bytes
#     -fw X to skip responses with X words
EXTRA_FFUF_OPTS=""
COOKIES=""
PROXY=""
IGNORE_HTTP_CODES="400,403,404"
###
LINUX_NATIVE_TOOLS_ONLY="N"
DICT_HOME="/tools/sec-lists/Discovery/Web-Content"
EXTENSIONS=".jsp,.php,.html,.htm,.js,.txt,.asp,.aspx"
###
function send_http_request {
	curl_opts="$1"
	target_url="$2"
	http_codes_to_ignore="$3"
	code=$(curl -sk -o /dev/null -w "%{http_code}" $curl_opts $target_url)
	match=$(echo $http_codes_to_ignore | grep -c $code)
	if [ $match -eq 0 ];
	then
		echo -e "[\e[96m$code\e[0m] $target_url"
	fi
}
###
if [ "$PROXY" != "" ];
then
	ffuf_proxy="-x $PROXY"
	curl_proxy="--proxy $PROXY"
else
	ffuf_proxy=""
	curl_proxy=""
fi
base_target=$1
opts=" $EXTRA_FFUF_OPTS -recursion -recursion-depth 5 $ffuf_proxy -fc $IGNORE_HTTP_CODES -c -ic -timeout 30 -t 10 "
dicts=("quickhits.txt" "common.txt" "graphql.txt" "swagger.txt" "spring-boot.txt" "axis.txt" "Common-DB-Backups.txt" "raft-small-words.txt")
for dict in ${dicts[@]}; do
	entries_count=$(wc -l $DICT_HOME/$dict | cut -d' ' -f1)
	echo -e "\e[93m[+] Test using '$dict' ($entries_count entries) ...\e[0m"
	if [ "$LINUX_NATIVE_TOOLS_ONLY" == "N" ];
	then
		if [ "$dict" != "raft-small-words.txt" ];
		then
			ffuf $opts -w $DICT_HOME/$dict -u $base_target/FUZZ -b "$COOKIES"
		else
			ffuf $opts -e $EXTENSIONS -w $DICT_HOME/$dict -u $base_target/FUZZ -b "$COOKIES"
		fi
	else
		IFS=', ' read -r -a file_extensions <<< "$EXTENSIONS"
		while IFS= read -r word
		do
			word_left_space_trimmed=${word##*( )}
			first_letter=${word_left_space_trimmed:0:1}
			new_word=$word_left_space_trimmed
			if [ $first_letter == "/" ];
			then
				word_to_use=${new_word:1}
			else
				word_to_use=${new_word}
			fi
			send_http_request "$curl_proxy" "$base_target/$word_to_use" "$IGNORE_HTTP_CODES"
			for file_extension in "${file_extensions[@]}"
			do
				send_http_request "$curl_proxy" "$base_target/$word_to_use$file_extension" "$IGNORE_HTTP_CODES"
			done
		done < "$DICT_HOME/$dict"
	fi
done
