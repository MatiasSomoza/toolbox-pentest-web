#!/bin/bash
###########################################################################################################
# Script to try to identify the secret used to sign a JWT token when symmetric key is used.
# Hashcat requires to adapt the default memory allocation of the container, so, john was used here to have
# a way to perform a light brute force with the default memory allocated to the container.
#
# System dependencies to install via the package manager:
#   apt install john jq
###########################################################################################################
if [ "$#" -lt 1 ]; then
	script_name=$(basename "$0")
	echo "Usage:"
	echo "   $script_name [TOKEN]"
	echo ""
 	echo "Call example:"
	echo "    $script_name 'eyJraWQiOiJmN...'"
	exit 1
fi
token=$1

function write_step (){
	echo -e "\e[93m[+] $1\e[0m"
}

dict_list=("/tools/dictionaries/jwt.secrets.txt" "/tools/dictionaries/rockyou.txt")
work_file="/tmp/token.txt"
echo $token > $work_file
alg_length=$(cat $work_file | cut -d'.' -f1 | base64 -d | jq -r '.alg' | grep -Po '\d+')
alg="HMAC-SHA$alg_length"
write_step "Algorithm:"
echo $alg
for d in ${dict_list[@]}; do
	write_step "Try using dictionary: $(basename $d)"
	john $work_file --wordlist=$d --format=$alg
done
write_step "Secret recovered:"
john --show $work_file
rm $work_file
