import websocket
import ssl
import _thread as thread
from termcolor import colored

"""
Script to xxx

Dependencies:
    pip3 install websocket termcolor
"""

# Constants
WS_VERBOSE_MODE = False
WS_URL = "wss://echo.websocket.org"
HANDSHAKE_CUSTOM_HTTP_HEADERS = ["X-Test: 123", "X-Test2: ABC"]
HANDSHAKE_CUSTOM_HTTP_COOKIES = "JSESSIONID=azerty; UserId=ABC;"
HANDSHAKE_CUSTOM_ORIGIN_HEADER = "http://righettod.eu"
PROXY_HOST = None  # "127.0.0.1"
PROXY_PORT = None  # 8080

# Handle communication with the WS server once connected
def send_msg(client):
    print(colored("[+] Ready to send message", "magenta"))
    while True:
        msg = input()
        if msg.lower().strip(" ") == "quit":
            print("[i] Initiate connection closing")
            client.close()
            return
        client.send(msg)


# WS event handling functions
def on_message(client, message):
    print(colored(f"[+] Message received", "magenta"))
    print(message)


def on_error(client, error):
    print(colored(f"[+] Error received", "magenta"))
    print(error)


def on_close(client):
    print(colored(f"[+] Connection closed", "magenta"))


def on_open(client):
    print(colored(f"[+] Connection opened", "magenta"))
    thread.start_new_thread(send_msg, (client,))


if __name__ == "__main__":
    websocket.enableTrace(WS_VERBOSE_MODE)
    client = websocket.WebSocketApp(WS_URL, on_message=on_message, on_error=on_error, on_close=on_close, on_open=on_open,
                                    header=HANDSHAKE_CUSTOM_HTTP_HEADERS, cookie=HANDSHAKE_CUSTOM_HTTP_COOKIES)
    if PROXY_HOST is not None and PROXY_PORT is not None:
        client.run_forever(sslopt={"cert_reqs": ssl.CERT_NONE}, origin=HANDSHAKE_CUSTOM_ORIGIN_HEADER,
                           http_proxy_host=PROXY_HOST, http_proxy_port=PROXY_PORT)
    else:
        client.run_forever(
            sslopt={"cert_reqs": ssl.CERT_NONE}, origin=HANDSHAKE_CUSTOM_ORIGIN_HEADER)
