"""
Utility Python3 script to manually alter a SAML Request/Response in order to manually inspect the behavior of a service validating/using the SAML Request/Response.

Useful to analyze specific cases returning a different/strange response content/code/length during the application.

Dependencies:
    pip install xxx

References:
    xxx
"""
import base64
import urllib.parse

DEFAULT_ENCODING = "utf-8"


def decode(saml_content):
    return base64.b64decode(saml_content.encode(DEFAULT_ENCODING)).decode(DEFAULT_ENCODING)


def encode(saml_content):
    return base64.b64encode(saml_content.encode(DEFAULT_ENCODING)).decode(DEFAULT_ENCODING)


def load_from_file(saml_content_file_location):
    with open(saml_content_file_location, "r", encoding=DEFAULT_ENCODING) as f:
        saml_content = urllib.parse.unquote(f.read())
    return saml_content


def save_to_file(saml_content_file_location, saml_content):
    with open(saml_content_file_location, "w", encoding=DEFAULT_ENCODING) as f:
        f.write(urllib.parse.quote(saml_content))


if __name__ == "__main__":
    input_file = "saml_response_encoded.txt"
    output_file = "saml_response_encoded_altered.txt"
    # Load and decode the SAML content
    saml_content = decode(load_from_file(input_file))
    # Do action on SAML content...
    saml_content = saml_content.replace("admin@libcurl.so.com", "admin@libcurl.so<!---->.com")
    # Encode and save the SAML content
    save_to_file(output_file, encode(saml_content))
