FROM kalilinux/kali-rolling:latest
# Properties
LABEL description="Web Application Pentest customized toolbox based on a KALI image"
LABEL maintainer="dominique.righetto@gmail.com"
# Install system packages
RUN apt-get update && apt-get install -y aha amass apache2 autoconf automake binwalk bsdmainutils build-essential cewl curl dirb dirbuster dnsutils exploitdb feroxbuster ftp git gobuster golang-go iproute2 iputils-ping jq libauthen-pam-perl libcurl4 libcurl4-openssl-dev libffi-dev libgeoip-dev libimage-exiftool-perl libio-pty-perl libnet-ssleay-perl libsqlite3-dev libssl-dev libtool locales nano netcat net-tools nmap nodejs npm openjdk-11-jdk openssl python-dev perl python3 python3-dev python3-pip ruby ruby-dev ssh telnet unicornscan unzip vim wget whois wpscan zlib1g-dev zip zsh
# Fix error with Ruby during Beef Installation
RUN gem install rake
RUN mkdir -p /usr/share/rubygems-integration/all/gems/rake-12.3.1/exe
RUN ln -s /usr/bin/rake /usr/share/rubygems-integration/all/gems/rake-12.3.1/exe/
# Install tools
RUN mkdir -p /tools/reports
## Ones via GIT repository cloning
RUN git clone --depth 1 https://github.com/drwetter/testssl.sh /tools/testssl
RUN git clone --depth 1 https://github.com/sullo/nikto.git /tools/nikto
RUN git clone --depth 1 https://github.com/danielmiessler/SecLists.git /tools/sec-lists
RUN git clone --depth 1 https://github.com/maurosoria/dirsearch.git /tools/dirsearch
RUN git clone --depth 1 https://github.com/darkoperator/dnsrecon.git /tools/dnsrecon
RUN git clone --depth 1 https://github.com/aboul3la/Sublist3r /tools/sublist3r
RUN git clone --depth 1 https://github.com/stamparm/identYwaf.git /tools/identYwaf
RUN git clone --depth 1 https://github.com/danielmiessler/RobotsDisallowed.git /tools/robots-disallowed
RUN git clone --depth 1 https://github.com/elceef/dnstwist.git /tools/dnstwist
RUN git clone --depth 1 https://github.com/righettod/website-passive-reconnaissance.git /tools/website-passive-reconnaissance
RUN git clone --depth 1 https://github.com/sqlmapproject/sqlmap.git /tools/sqlmap
RUN git clone --depth 1 https://github.com/no0be/vhost-brute.sh.git /tools/vhost-brute
RUN git clone --depth 1 https://github.com/infodox/python-pty-shells.git /tools/python-pty-shells
RUN git clone --depth 1 https://github.com/rebootuser/LinEnum.git /tools/linux-enumeration
RUN git clone --depth 1 https://github.com/mzet-/linux-exploit-suggester.git /tools/linux-exploit-suggester
RUN git clone --depth 1 https://github.com/bitsadmin/wesng.git /tools/windows-exploit-suggester
RUN git clone --depth 1 https://github.com/ShutdownRepo/shellerator /tools/shellerator
RUN git clone --depth 1 https://github.com/ticarpi/jwt_tool /tools/jwt-tool
RUN git clone --depth 1 https://github.com/samratashok/nishang.git /tools/offensive-powershell-scripts
RUN git clone --depth 1 https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite.git /tools/privilege-escalation-awesome-scripts-suite
RUN git clone --depth 1 https://github.com/ptoomey3/evilarc.git /tools/evilarc
## Ones via release downloading
RUN wget -q https://github.com/ffuf/ffuf/releases/download/v1.3.1/ffuf_1.3.1_linux_amd64.tar.gz -O /tmp/ffuf.tar.gz
RUN mkdir /tools/ffuf; tar -xf /tmp/ffuf.tar.gz -C /tools/ffuf
RUN mkdir /tools/ysoserial
RUN wget -q https://jitpack.io/com/github/frohoff/ysoserial/master-SNAPSHOT/ysoserial-master-SNAPSHOT.jar -O /tools/ysoserial/ysoserial.jar
RUN mkdir /tools/all-the-package-names
RUN wget -q https://github.com/nice-registry/all-the-package-names/raw/master/names.json -O /tools/all-the-package-names/names.json
RUN wget -q https://github.com/fullstorydev/grpcurl/releases/download/v1.8.0/grpcurl_1.8.0_linux_x86_64.tar.gz -O /tmp/grpcurl.tar.gz
RUN mkdir /tools/grpcurl; tar -xf /tmp/grpcurl.tar.gz -C /tools/grpcurl
RUN mkdir /tools/venom-ovh
RUN wget -q https://github.com/ovh/venom/releases/download/v1.0.0-rc.2/venom.linux-amd64 -O /tools/venom-ovh/venom
RUN cd /tools/venom-ovh;chmod +x venom; ./venom update
RUN mkdir /tools/jdam
### Release home for JDAM: https://gitlab.com/michenriksen/jdam/-/releases
RUN wget -q https://gitlab.com/api/v4/projects/22765596/packages/generic/jdam/0.2.0/jdam-linux-amd64-v0.2.0-alpha -O /tools/jdam/jdam
RUN mkdir /tools/container-diff
RUN wget -q https://storage.googleapis.com/container-diff/latest/container-diff-linux-amd64 -O /tools/container-diff/container-diff
RUN wget -q https://raw.githubusercontent.com/GoogleContainerTools/container-diff/master/README.md -O /tools/container-diff/README.md
RUN mkdir /tools/kiterunner
RUN wget -q -O /tmp/kite.tar.gz https://github.com/assetnote/kiterunner/releases/download/v1.0.2/kiterunner_1.0.2_linux_amd64.tar.gz
RUN tar -xf /tmp/kite.tar.gz -C /tools/kiterunner
RUN wget -q -O /tmp/kite-large.tar.gz https://wordlists-cdn.assetnote.io/data/kiterunner/routes-large.kite.tar.gz
RUN tar -xf /tmp/kite-large.tar.gz -C /tools/kiterunner
RUN wget -q -O /tmp/kite-small.tar.gz https://wordlists-cdn.assetnote.io/data/kiterunner/routes-small.kite.tar.gz
RUN tar -xf /tmp/kite-small.tar.gz -C /tools/kiterunner
RUN wget -q -O /tools/kiterunner/README.md https://raw.githubusercontent.com/assetnote/kiterunner/main/readme.md
RUN mkdir /tools/dependency-confusion-check
RUN wget -q -O /tmp/dc.tar.gz https://github.com/visma-prodsec/confused/releases/download/v0.4/confused_0.4_linux_amd64.tar.gz
RUN tar -xf /tmp/dc.tar.gz -C /tools/dependency-confusion-check
RUN wget -q -O /tools/dependency-confusion-check/README.md https://raw.githubusercontent.com/visma-prodsec/confused/main/README.md
## One via repo cloning and local install
RUN git clone --depth 1 https://github.com/EnableSecurity/wafw00f.git /tools/wafw00f
RUN cd /tools/wafw00f; python3 setup.py install
## Ones via PIP
RUN pip3 install shodan pycryptodomex httpie tabulate ansi2html asciinema droopescan pycurl wfuzz pipreqs regexploit name-that-hash
## Ones via NPM
RUN npm install -g retire js-beautify
## One via GEM
RUN gem install mdless
# Install utility scripts
COPY scripts /tools/scripts
# Install utility templates
COPY templates /tools/templates
# Install static binaries folder
COPY static-binaries /tools/static-binaries
# Install docs folder
COPY docs /tools/docs
# Install additional dictionaries
## Assetnote Wordlists
RUN mkdir /tools/assetnote-wordlists
COPY build_assetnote_dict_list.sh /tools/assetnote-wordlists/
RUN cd /tools/assetnote-wordlists/;chmod +x build_assetnote_dict_list.sh;/bin/bash build_assetnote_dict_list.sh
## Crawler User-Agents
RUN mkdir /tools/crawler-user-agents;cd /tools/crawler-user-agents;wget -q https://raw.githubusercontent.com/monperrus/crawler-user-agents/master/crawler-user-agents.json
RUN cd /tools/crawler-user-agents;jq -r ".[].instances[]" crawler-user-agents.json > user-agents-dict.txt
# Install home-made dictionaries folder
COPY dictionaries /tools/dictionaries
# Generate "requirements.txt" file for custom python scripts
RUN cd /tools/scripts;pipreqs . --force
# Install dependencies via PIP for tools as well as custom scripts
RUN BUILD_LIB=1 pip3 install ssdeep
RUN for f in $(ls /tools/*/requirements.txt); do pip3 install -r $f; done
RUN tldextract --update
# Install BEEF + Reverse Proxy configuration
# BEEF
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
RUN locale-gen en_US.UTF-8 && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
RUN echo 'LANG="en_US.UTF-8"' > /etc/default/locale
RUN dpkg-reconfigure --frontend=noninteractive locales && update-locale LANG=en_US.UTF-8
RUN git clone --branch v0.5.0.0 --depth 1 https://github.com/beefproject/beef /tools/beef
RUN cd /tools/beef && gem install bundler && bundle install && sed -i 's/passwd: "beef"/passwd: "beefbeef"/g' config.yaml
## Apache RP
RUN a2enmod ssl proxy proxy_http substitute
COPY beef /tools/beef-conf
RUN chmod +x /tools/beef-conf/*.sh
RUN rm /etc/apache2/sites-enabled/000-default.conf && ln -s /tools/beef-conf/beef-https-rp-config.conf /etc/apache2/sites-enabled/000-beef.conf
RUN apachectl configtest
# Misc
RUN sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
# Set execute access right
RUN chmod -R +x /tools/
# Set final settings of the toolbox
RUN cd /tools/dirsearch; pip3 install .
RUN cd /tools/jwt-tool; python3 jwt_tool.py eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpbiI6InRpY2FycGkifQ.bsSwqj2c2uI9n7-ajmi3ixVGhPUiY7jO9SUn9dm15Po; echo 0
RUN cd /tools/jwt-tool; python3 jwt_tool.py eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJsb2dpbiI6InRpY2FycGkifQ.bsSwqj2c2uI9n7-ajmi3ixVGhPUiY7jO9SUn9dm15Po; echo 0
RUN /tools/kiterunner/kr scan http://righettod.eu/api -q -A=apiroutes-210328:10 --fail-status-codes 404 --preflight-depth 1
RUN date > /root/image-info
RUN echo "alias list-http-scripts-nmap='ls /usr/share/nmap/scripts/http-*'" >> /root/.zshrc
RUN echo "alias scan-nmap='nmap -Pn --script http-trace,http-waf-detect,http-waf-fingerprint --open'" >> /root/.zshrc
RUN echo "alias image-info='cat /root/image-info'" >> /root/.zshrc
RUN touch /root/.hushlogin
# Setup SSH server for remove access
RUN echo "...:::TOOLBOX:::..." > /etc/motd
RUN service ssh restart
RUN service ssh stop
RUN rm -rf /etc/ssh/ssh_host_*
RUN dpkg-reconfigure openssh-server
COPY ssh-public-key.pem /root/.ssh/ 
RUN mv /root/.ssh/ssh-public-key.pem /root/.ssh/authorized_keys
RUN chmod -R 700 /root/.ssh
RUN service ssh restart
RUN service ssh stop
WORKDIR /tools
VOLUME /tools/reports
EXPOSE 80
EXPOSE 443
EXPOSE 22
ENTRYPOINT service ssh restart && zsh
