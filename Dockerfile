FROM kalilinux/kali-rolling:latest
# Properties
LABEL description="Web Application Pentest customized toolbox based on a KALI image"
# Install system packages
RUN apt-get update && apt-get install -y aha amass apache2 autoconf automake binwalk bsdmainutils build-essential cewl curl dirb dirbuster dnsutils exploitdb ftp git gobuster golang-go iproute2 iputils-ping jq libauthen-pam-perl libcurl4 libcurl4-openssl-dev libffi-dev libgeoip-dev libimage-exiftool-perl libio-pty-perl libnet-ssleay-perl libsqlite3-dev libssl-dev libtool locales nano netcat net-tools nmap nodejs openjdk-11-jdk openssl python-dev perl python3 python3-dev python3-pip ruby ruby-dev telnet unicornscan unzip vim wafw00f wget whois wpscan zlib1g-dev zip zsh
# Fix error with Ruby during Beef Installation
RUN gem install rake
RUN mkdir -p /usr/share/rubygems-integration/all/gems/rake-12.3.1/exe
RUN ln -s /usr/bin/rake /usr/share/rubygems-integration/all/gems/rake-12.3.1/exe/
# Install tools
RUN mkdir -p /tools/reports
## Ones via GIT repository cloning
RUN git clone --depth 1 https://github.com/drwetter/testssl.sh /tools/testssl
RUN git clone --depth 1 https://github.com/sullo/nikto.git /tools/nikto
RUN git clone --depth 1 https://github.com/danielmiessler/SecLists.git /tools/sec-lists
RUN git clone --depth 1 https://github.com/maurosoria/dirsearch.git /tools/dirsearch
RUN git clone --depth 1 https://github.com/psypanda/hashID.git /tools/hash-id
RUN git clone --depth 1 https://github.com/darkoperator/dnsrecon.git /tools/dnsrecon
RUN git clone --depth 1 https://github.com/aboul3la/Sublist3r /tools/sublist3r
RUN git clone --depth 1 https://github.com/stamparm/identYwaf.git /tools/identYwaf
RUN git clone --depth 1 https://github.com/danielmiessler/RobotsDisallowed.git /tools/robots-disallowed
RUN git clone --depth 1 https://github.com/elceef/dnstwist.git /tools/dnstwist
RUN git clone --depth 1 https://github.com/righettod/tls-cert-discovery.git /tools/tls-cert-discovery
RUN git clone --depth 1 https://github.com/righettod/website-passive-reconnaissance.git /tools/website-passive-reconnaissance
RUN git clone --depth 1 https://github.com/sqlmapproject/sqlmap.git /tools/sqlmap
RUN git clone --depth 1 https://github.com/no0be/vhost-brute.sh.git /tools/vhost-brute
RUN git clone --depth 1 https://github.com/infodox/python-pty-shells.git /tools/python-pty-shells
RUN git clone --depth 1 https://github.com/rebootuser/LinEnum.git /tools/linux-enumeration
RUN git clone --depth 1 https://github.com/mzet-/linux-exploit-suggester.git /tools/linux-exploit-suggester
RUN git clone --depth 1 https://github.com/bitsadmin/wesng.git /tools/windows-exploit-suggester
RUN git clone --depth 1 https://github.com/ShutdownRepo/shellerator /tools/shellerator
RUN git clone --depth 1 https://github.com/ticarpi/jwt_tool /tools/jwt-tool
RUN git clone --depth 1 https://github.com/dagonis/obscureV4.git /tools/ipv4-address-obscure
RUN git clone --depth 1 https://github.com/samratashok/nishang.git /tools/offensive-powershell-scripts
RUN git clone --depth 1 https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite.git /tools/privilege-escalation-awesome-scripts-suite
## Ones via release downloading
RUN wget https://github.com/ffuf/ffuf/releases/download/v1.0.2/ffuf_1.0.2_linux_amd64.tar.gz -O /tmp/ffuf.tar.gz
RUN mkdir /tools/ffuf; tar -xf /tmp/ffuf.tar.gz -C /tools/ffuf
RUN mkdir /tools/ysoserial
RUN wget https://jitpack.io/com/github/frohoff/ysoserial/master-SNAPSHOT/ysoserial-master-SNAPSHOT.jar -O /tools/ysoserial/ysoserial.jar
RUN mkdir /tools/all-the-package-names
RUN wget https://github.com/nice-registry/all-the-package-names/raw/master/names.json -O /tools/all-the-package-names/names.json
## Ones via PIP
RUN pip3 install shodan pycryptodomex httpie tabulate
# Install utility scripts
COPY scripts /tools/scripts
# Install utility templates
COPY templates /tools/templates
# Install static binaries folder
COPY static-binaries /tools/static-binaries
# Install docs folder
COPY docs /tools/docs
# Install dictionaries folder
COPY dictionaries /tools/dictionaries
# Install dependencies for tools as well tools via PIP
RUN BUILD_LIB=1 pip3 install ssdeep
RUN pip3 install --upgrade pycurl wfuzz
RUN for f in $(ls /tools/*/requirements.txt); do pip3 install -r $f; done
RUN tldextract --update
# Install BEEF + Reverse Proxy configuration
# BEEF
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
RUN locale-gen en_US.UTF-8 && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
RUN echo 'LANG="en_US.UTF-8"' > /etc/default/locale
RUN dpkg-reconfigure --frontend=noninteractive locales && update-locale LANG=en_US.UTF-8
RUN git clone --branch v0.5.0.0 --depth 1 https://github.com/beefproject/beef /tools/beef
RUN cd /tools/beef && gem install bundler && bundle install && sed -i 's/passwd: "beef"/passwd: "beefbeef"/g' config.yaml
## Apache RP
RUN a2enmod ssl proxy proxy_http substitute
COPY beef /tools/beef-conf
RUN chmod +x /tools/beef-conf/*.sh
RUN rm /etc/apache2/sites-enabled/000-default.conf && ln -s /tools/beef-conf/beef-https-rp-config.conf /etc/apache2/sites-enabled/000-beef.conf
RUN apachectl configtest
# Set execute access right
RUN chmod -R +x /tools/
# Set final settings of the toolbox
COPY .bashrc /root/.bashrc
WORKDIR /tools
VOLUME /tools/reports
EXPOSE 80
EXPOSE 443
